@model AssistanceOnlineWeb.Controllers.LoginModel
@using Microsoft.Owin.Security

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Sign.cshtml";
}
<div class="col-md-3" id="login-wrapper">
    <div class="panel panel-primary animated flipInY">
        <div class="panel-heading">
            <h3 class="panel-title">
                Sign In
            </h3>
        </div>
        <div class="panel-body">
            <p> Login to access your account.</p>
               <div class="panel-body">

                @using (Html.BeginForm("Login", "SignUp", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Email")
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your last name" } })

                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Password")
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your name" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        
                    </div>

                    @Html.ActionLink("Forgot Your Password?", "ForgotPassword", "SignUp", new { @class = "help-block" })

                    <input type="submit" value="Sign In" class="btn btn-primary btn-block" />

                }

                @{

                    var providers = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

                    if (providers != null)
                    {
                        using (Html.BeginForm("ExternalAuthentication", "SignUp", FormMethod.Post))
                        {
                            foreach (var item in providers)
                            {
                                <button class="btn btn-primary btn-block" value="@item.AuthenticationType" name="provider" type="submit">
                                    @item.Caption
                                </button>
                            }
                        }
                    }
                }

                   <hr />
                   @Html.ActionLink("Not a member? Sign Up", "Index","SignUp",new { @class = "btn btn-default btn-block" })

            </div>
            @*<form class="form-horizontal" role="form">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="email" class="form-control" id="email" placeholder="Email">
                        <i class="fa fa-user"></i>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="password" class="form-control" id="password" placeholder="Password">
                        <i class="fa fa-lock"></i>
                        <a href="javascript:void(0)" class="help-block">Forgot Your Password?</a>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <a href="index.html" class="btn btn-primary btn-block">Sign in</a>
                        <hr />
                        <a href="pages-sign-up.html" class="btn btn-default btn-block">Not a member? Sign Up</a>
                    </div>
                </div>
            </form>*@
        </div>
    </div>
</div>


@*<div class="row">
    <div class="col-md-3" id="login-wrapper">
        <div class="panel panel-primary animated flipInY">
            <div class="panel-heading">
                <h3 class="panel-title">
                    Sign Up
                </h3>
            </div>
            <div class="panel-body">

                @using (Html.BeginForm("Login", "SignUp", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Email")
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your last name" } })

                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Password")
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your name" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>


                    <input type="submit" value="Sign In" class="btn btn-primary btn-block" />

                }

                @{

                    var providers = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

                    if (providers != null)
                    {
                        using (Html.BeginForm("ExternalAuthentication", "SignUp", FormMethod.Post))
                        {
                            foreach (var item in providers)
                            {
                                <button class="btn btn-primary btn-block" value="@item.AuthenticationType" name="provider" type="submit">
                                    @item.Caption
                                </button>
                            }
                        }
                    }
                }

            </div>

        </div>
    </div>
</div>*@
